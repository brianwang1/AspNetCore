@using Microsoft.AspNetCore.Components.Routing
@inject IUriHelper UriHelper

@*
    This router is independent of any other router that may exist within the same project.
    It exists so that (1) we can easily have multiple test cases that depend on the
    CascadingAuthenticationState, and (2) we can test the integration between the router
    and @page authorization rules.
*@

<CascadingAuthenticationState>
    <Router AppAssembly=typeof(BasicTestApp.Program).Assembly />
</CascadingAuthenticationState>

<hr />
<Links />

@functions {
    protected override void OnInit()
    {
        // Start at AuthHome, not at any other component in the same app that happens to
        // register itself for the route ""
        var absoluteUriPath = new Uri(UriHelper.GetAbsoluteUri()).GetLeftPart(UriPartial.Path);
        var relativeUri = UriHelper.ToBaseRelativePath(UriHelper.GetBaseUri(), absoluteUriPath);
        if (relativeUri == string.Empty)
        {
            UriHelper.NavigateTo("AuthHome");
        }
    }
}
